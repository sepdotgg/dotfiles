# thefuck
# https://github.com/nvbn/thefuck
eval $(thefuck --alias)

# colorls
# https://github.com/athityakumar/colorls
alias ls='colorls --dark --sort-dirs --report'
alias lc='colorls --tree --dark'

# Weather by wttr.in: https://github.com/chubin/wttr.in
weather() {
  curl -s "wttr.in/$1"
}
wttr() {
  curl -s "wttr.in/$1?format=3"
}

# Python servers
# Loads up a simple Python HTTP server in the current directory

alias browse='cd "$(pwd)" && python -m http.server'

# Quick shortcuts to get ipv4 and ipv6 addresses of the machine
alias getip4='hostname -I | awk '"'"'{print $1}'"'"''
alias getip6='hostname -I | awk '"'"'{print $2}'"'"''
alias getip=getip4


# pyenv
# https://github.com/pyenv/pyenv
export PATH="${HOME}/.pyenv/bin:${PATH}"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# jenv
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# JAVA_HOME
export JAVA_HOME=$(jenv javahome)

# poetry
# https://github.com/sdispater/poetry
#
# Unfortunately 'poetry shell' doesn't activate the venv
# https://github.com/sdispater/poetry/issues/571
export PATH="$HOME/.poetry/bin:$PATH"

poetry_activate() {
    POETRY_VENV_BIN="$(dirname $(poetry run which python))"
    ACTIVATE_FILE="${POETRY_VENV_BIN}/activate"
    source $ACTIVATE_FILE
}
alias pactivate=poetry_activate

# Rust
export PATH="$HOME/.cargo/bin:$PATH"
source $HOME/.cargo/env

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# Streamlink
twitch() {
    streamlink --twitch-low-latency https://twitch.tv/$1 best &>/dev/null &

}

# Firefox
firefox() {
  open -na "Firefox.app" --args "$@"
}

# IntelliJ
clion() {
  open -na "Clion.app" --args "$@"
}

idea() {
  open -na "IntelliJ IDEA.app" --args "$@"
}

webstorm() {
  open -na "WebStorm.app" --args "$@"
}

# Databases
export PATH="/usr/local/opt/mysql-client/bin:$PATH"
export PATH="/usr/local/opt/postgresql@12/bin:$PATH"

# Docker
dbr() {
  docker run -it $(docker build -q ${1-"."})
}

dbl() {
  docker run -p 9000:8080 -it $(docker build -q ${1-"."})
}

dbrie() {
  local imgId=$(docker build -q ${1-"."})
  shift
  echo "Image ID ${imgId}"
  docker run -v ~/.aws-lambda-rie:/aws-lambda -p 9000:8080 \
    --entrypoint /aws-lambda/aws-lambda-rie -it ${imgId} $@
}
